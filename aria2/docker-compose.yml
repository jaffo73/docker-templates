version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:
  web:
    image: ${DEPLOY_IMAGE_WEB:-p3terx/ariang:latest}
    command: --port 80
#:log |    logging: *loki-logging
#:port|    ports:
#:port|      - ${DEPLOY_PORT_WEB:-80}:80
    networks:
      - external_network
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_WEB:-node.labels.ignore != true}
      labels:
        - "traefik.enable=true" #!port
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-aria2}_aria2.rule=Host(`${DEPLOY_SUBDOMAIN:-aria2}.${DEPLOY_HOSTNAME}`)"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-aria2}_aria2.entrypoints=webhttps"
#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-aria2}_aria2.tls.options=mtls@file"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-aria2}_aria2.tls.certresolver=le"
        - "traefik.http.services.${DEPLOY_STACK_NAME:-aria2}_aria2.loadbalancer.server.port=80"

  aria2:
    # Reference: https://p3terx.com/archives/docker-aria2-pro.html
    image: ${DEPLOY_IMAGE_ARIA2:-p3terx/aria2-pro:latest}
#:log |    logging: *loki-logging
    logging:			#!log
      driver: json-file	#!log
      options:			#!log
        max-size: 1m	#!log
    ports:
      - ${DEPLOY_PORT_ARIA2_BT:-6888}:6888/tcp
      - ${DEPLOY_PORT_ARIA2_BT:-6888}:6888/udp
#:port|      - ${DEPLOY_PORT_ARIA2_RPC:-6800}:6800
    environment:
      - LISTEN_PORT=6888
      - RPC_PORT=6800
      - RPC_SECRET=${RPC_SECRET:-aria2}
      - PUID
      - PGID
      - UMASK_SET
      - DISK_CACHE
      - IPV6_MODE
      - UPDATE_TRACKERS
      - CUSTOM_TRACKER_URL
      - SPECIAL_MODE
      - TZ
    networks:
      - external_network
    volumes:
      - config:/config
      - download:/downloads #!media_download
#:media_download|      - media_download:/downloads
#:media |      - media:/media
#:rclone|      - rclone:$DEPLOY_RCLONE_LOCAL
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_ARIA2:-node.labels.ignore != true}
      labels:
        - "traefik.enable=true" #!port
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-aria2}_web.rule=Host(`${DEPLOY_SUBDOMAIN:-aria2}.${DEPLOY_HOSTNAME}`)&&PathPrefix(`/jsonrpc`)"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-aria2}_web.entrypoints=webhttps"
#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-aria2}_web.tls.options=mtls@file"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-aria2}_web.tls.certresolver=le"
        - "traefik.http.services.${DEPLOY_STACK_NAME:-aria2}_web.loadbalancer.server.port=6800"
 
networks:
  external_network:
    external: true

volumes:
  download:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-aria2}/download"
  config:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-aria2}/config"
#:media_download|  media_download:
#:media_download|    driver_opts:
#:media_download|      type: "nfs"
#:media_download|      o: "addr=$DEPLOY_MEDIA_DOWNLOAD_HOST,nolock,soft,rw"
#:media_download|      device: ":$DEPLOY_MEDIA_DOWNLOAD_ROOT"
#:media |  media:
#:media |    driver_opts:
#:media |      type: "nfs"
#:media |      o: "addr=$DEPLOY_MEDIA_HOST,nolock,soft,rw"
#:media |      device: ":$DEPLOY_MEDIA_ROOT"
#:rclone|  rclone:
#:rclone|    driver: "sapk/plugin-rclone:latest"
#:rclone|    driver_opts:
#:rclone|      args: "--allow-root --allow-other --attr-timeout 60s --vfs-cache-mode full"
#:rclone|      config: "$DEPLOY_RCLONE_CONFIG"
#:rclone|      remote: "$DEPLOY_RCLONE_REMOTE"
