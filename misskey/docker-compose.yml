version: "3.2"

services:
  web:
#    build: .
    image: misskey/misskey:12.47.0
    networks:
      - internal_network
      - external_network
    volumes:
      - config:/misskey/.config
      - files:/misskey/files
    deploy:
      replicas: 1
      placement:
        constraints: 
          - $DEPLOY_NODE_WEB
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.misskey_web.rule=Host(`misskey.<secret:HOST_NAME>`)"
        - "traefik.http.routers.misskey_web.entrypoints=webhttps"
        - "traefik.http.routers.misskey_web.tls.certresolver=le"
        - "traefik.http.services.misskey_web.loadbalancer.server.port=3000"

  redis:
    image: redis:4.0-alpine
    networks:
      - internal_network
    volumes:
      - redis:/data
    deploy:
      replicas: 1
      placement:
        constraints: 
          - $DEPLOY_NODE_REDIS

  db:
    image: postgres:12.2-alpine
    networks:
      - internal_network
    env_file:
      - config/docker.env
    volumes:
      - db:/var/lib/postgresql/data
    deploy:
      replicas: 1
      placement:
        constraints: 
          - $DEPLOY_NODE_DB

#  es:
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.4.2
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    networks:
#      - internal_network
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data

networks:
  internal_network:
    internal: true
  external_network:
    external: true

volumes:
  config:
    driver_opts:
      type: "nfs"
      o: "addr=nfs.<secret:HOST_NAME>,nolock,soft,rw"
      device: ":/srv/nfs/misskey/config"
  files:
    driver_opts:
      type: "nfs"
      o: "addr=nfs.<secret:HOST_NAME>,nolock,soft,rw"
      device: ":/srv/nfs/misskey/files"
  redis:
    driver_opts:
      type: "nfs"
      o: "addr=nfs.<secret:HOST_NAME>,nolock,soft,rw"
      device: ":/srv/nfs/misskey/redis"
  db:
    driver_opts:
      type: "nfs"
      o: "addr=nfs.<secret:HOST_NAME>,nolock,soft,rw"
      device: ":/srv/nfs/misskey/db"
