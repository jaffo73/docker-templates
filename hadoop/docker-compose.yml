version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:
  web: #!port
    image: alpine/socat:latest #!port
    command: tcp-listen:9870,fork tcp:namenode:9870 #!port
    networks: #!port
      - external_network #!port
      - internal_network #!port
    deploy: #!port
      replicas: 1 #!port
      placement: #!port
        constraints:  #!port
          - ${DEPLOY_NODE_NAMENODE:-node.labels.ignore != true} #!port
      labels: #!port
        - "traefik.enable=true" #!port
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_namenode.rule=Host(`${DEPLOY_SUBDOMAIN_NAMENODE:-namenode-hadoop}.${DEPLOY_HOSTNAME}`)" #!port
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_namenode.entrypoints=webhttps" #!port
#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_namenode.tls.options=sslVerifyClient@file" #!port
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_namenode.tls.certresolver=le" #!port
        - "traefik.http.services.${DEPLOY_STACK_NAME:-hadoop}_namenode.loadbalancer.server.port=9870" #!port

  namenode:
    image: ${DEPLOY_IMAGE_NAMENODE:-bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8}
#:log |    logging: *loki-logging
#:port|    ports:
#:port|      - ${DEPLOY_PORT_NAMENODE:-9870}:9870
    environment:
      - CLUSTER_NAME=${CLUSTER_NAME:-test}
    env_file: ${DEPLOY_CONFIG_HADOOP:-config/hadoop.env}
    networks:
      - internal_network
    volumes:
      - namenode:/hadoop/dfs/name #!local-volume
#:local-volume|      - ${DEPLOY_LOCAL_DATA_ROOT:?please set local volume location}/${DEPLOY_STACK_NAME:-hadoop}/namenode:/hadoop/dfs/name
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_NAMENODE:-node.labels.ignore != true}

  datanode:
    image: ${DEPLOY_IMAGE_DATANODE:-bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8}
#:log |    logging: *loki-logging
#:port|    ports:
#:port|     - target: 9864
#:port|       published: ${DEPLOY_PORT_DATANODE:-9864}
#:port|       protocol: tcp
#:port|       mode: host
    environment:
      SERVICE_PRECONDITION: "namenode:9000"
    env_file: ${DEPLOY_CONFIG_HADOOP:-config/hadoop.env}
    networks:
      - internal_network
    volumes:
      - ${DEPLOY_LOCAL_DATA_ROOT:?please set local volume location}/${DEPLOY_STACK_NAME:-hadoop}/datanode:/hadoop/dfs/data
    deploy:
      mode: global
      placement:
        constraints: 
          - ${DEPLOY_NODE_DATANODE:-node.labels.ignore != true}

#:yarn|  resourcemanager:
#:yarn|    image: ${DEPLOY_IMAGE_RESOURCEMANAGER:-bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8}
#:yarn|#:log |    logging: *loki-logging
#:yarn|#:port|    ports:
#:yarn|#:port|      - ${DEPLOY_PORT_RESOURCEMANAGER:-8088}:8088
#:yarn|    healthcheck:
#:yarn|      disable: true
#:yarn|    environment:
#:yarn|        SERVICE_PRECONDITION: "namenode:9000 datanode:9864"
#:yarn|    env_file: ${DEPLOY_CONFIG_HADOOP:-config/hadoop.env}
#:yarn|    networks:
#:yarn|      - internal_network
#:yarn|    deploy:
#:yarn|      replicas: 1
#:yarn|      placement:
#:yarn|        constraints: 
#:yarn|          - ${DEPLOY_NODE_RESOURCEMANAGER:-node.labels.ignore != true}
#:yarn|
#:yarn|  web-resourcemanager: #!port
#:yarn|    image: alpine/socat:latest #!port
#:yarn|    command: tcp-listen:8088,fork tcp:resourcemanager:8088 #!port
#:yarn|    networks: #!port
#:yarn|      - external_network #!port
#:yarn|      - internal_network #!port
#:yarn|    deploy: #!port
#:yarn|      replicas: 1 #!port
#:yarn|      placement: #!port
#:yarn|        constraints:  #!port
#:yarn|          - ${DEPLOY_NODE_RESOURCEMANAGER:-node.labels.ignore != true} #!port
#:yarn|      labels: #!port
#:yarn|        - "traefik.enable=true" #!port
#:yarn|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.rule=Host(`${DEPLOY_SUBDOMAIN_RESOURCEMANAGER:-resourcemanager-hadoop}.${DEPLOY_HOSTNAME}`)" #!port
#:yarn|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.entrypoints=webhttps" #!port
#:yarn|#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.tls.options=sslVerifyClient@file" #!port
#:yarn|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.tls.certresolver=le" #!port
#:yarn|        - "traefik.http.services.${DEPLOY_STACK_NAME:-hadoop}_resourcemanager.loadbalancer.server.port=8088" #!port
#:yarn|
#:yarn|  nodemanager:
#:yarn|    image: ${DEPLOY_IMAGE_NODEMANAGER:-bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8}
#:yarn|#:log |    logging: *loki-logging
#:yarn|#:port|    ports:
#:yarn|#:port|     - target: 8042
#:yarn|#:port|       published: ${DEPLOY_PORT_NODEMANAGER:-8042}
#:yarn|#:port|       protocol: tcp
#:yarn|#:port|       mode: host
#:yarn|    healthcheck:
#:yarn|      disable: true
#:yarn|    environment:
#:yarn|        SERVICE_PRECONDITION: "namenode:9000 datanode:9864 resourcemanager:8088"
#:yarn|    env_file: ${DEPLOY_CONFIG_HADOOP:-config/hadoop.env}
#:yarn|    networks:
#:yarn|      - internal_network
#:yarn|    deploy:
#:yarn|      mode: global
#:yarn|      placement:
#:yarn|        constraints: 
#:yarn|          - ${DEPLOY_NODE_NODEMANAGER:-node.labels.ignore != true}

#:historyserver|  historyserver:
#:historyserver|    image: ${DEPLOY_IMAGE_HISTORYSER:-bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8}
#:historyserver|#:log |    logging: *loki-logging
#:historyserver|#:port|    ports:
#:historyserver|#:port|      - ${DEPLOY_PORT_HISTORYSERVER:-8188}:8188
#:historyserver|    healthcheck:
#:historyserver|      disable: true
#:historyserver|    environment:
#:historyserver|        SERVICE_PRECONDITION: "namenode:9000 datanode:9864 resourcemanager:8088"
#:historyserver|    env_file: ${DEPLOY_CONFIG_HADOOP:-config/hadoop.env}
#:historyserver|    volumes:
#:historyserver|      - historyserver:/hadoop/yarn/timeline #!local-volume
#:historyserver|#:local-volume|      - ${DEPLOY_LOCAL_DATA_ROOT:?please set local volume location}/${DEPLOY_STACK_NAME:-hadoop}/historyserver:/hadoop/yarn/timeline
#:historyserver|    networks:
#:historyserver|      - internal_network
#:historyserver|    deploy:
#:historyserver|      replicas: 1
#:historyserver|      placement:
#:historyserver|        constraints: 
#:historyserver|          - ${DEPLOY_NODE_HISTORYSER:-node.labels.ignore != true}
#:historyserver|
#:historyserver|  web-historyserver: #!port
#:historyserver|    image: alpine/socat:latest #!port
#:historyserver|    command: tcp-listen:8188,fork tcp:historyserver:8188 #!port
#:historyserver|    networks: #!port
#:historyserver|      - external_network #!port
#:historyserver|      - internal_network #!port
#:historyserver|    deploy: #!port
#:historyserver|      replicas: 1 #!port
#:historyserver|      placement: #!port
#:historyserver|        constraints:  #!port
#:historyserver|          - ${DEPLOY_NODE_HISTORYSER:-node.labels.ignore != true} #!port
#:historyserver|      labels: #!port
#:historyserver|        - "traefik.enable=true" #!port
#:historyserver|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_historyserver.rule=Host(`${DEPLOY_SUBDOMAIN_HISTORYSERVER:-historyserver-hadoop}.${DEPLOY_HOSTNAME}`)" #!port
#:historyserver|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_historyserver.entrypoints=webhttps" #!port
#:historyserver|#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_historyserver.tls.options=sslVerifyClient@file" #!port
#:historyserver|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_historyserver.tls.certresolver=le" #!port
#:historyserver|        - "traefik.http.services.${DEPLOY_STACK_NAME:-hadoop}_historyserver.loadbalancer.server.port=8188" #!port

#:hive|  hive:
#:hive|    image: ${DEPLOY_IMAGE_HIVE:-bde2020/hive:2.3.2-postgresql-metastore}
#:hive|#:port|    ports:
#:hive|#:port|      - ${DEPLOY_PORT_HIVE:-10000}:10000
#:hive|    env_file: ${DEPLOY_CONFIG_HADOOP:-config/hadoop.env}
#:hive|    environment:
#:hive|      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
#:hive|      SERVICE_PRECONDITION: "hive-metastore:9083"
#:hive|    networks:
#:hive|      - internal_network
#:hive|    deploy:
#:hive|      replicas: 1
#:hive|      placement:
#:hive|        constraints: 
#:hive|          - ${DEPLOY_NODE_HIVE:-node.labels.ignore != true}
#:hive|
#:hive|  hive-metastore:
#:hive|    image: ${DEPLOY_IMAGE_HIVE_METASTORE:-bde2020/hive:2.3.2-postgresql-metastore}
#:hive|#:port|    ports:
#:hive|#:port|      - ${DEPLOY_PORT_HIVE_METASTORE:-9083}:9083
#:hive|    env_file: ${DEPLOY_CONFIG_HADOOP:-config/hadoop.env}
#:hive|    command: /opt/hive/bin/hive --service metastore
#:hive|    environment:
#:hive|      SERVICE_PRECONDITION: "namenode:9000 datanode:9864 hive-metastore-postgresql:5432"
#:hive|    networks:
#:hive|      - internal_network
#:hive|    deploy:
#:hive|      replicas: 1
#:hive|      placement:
#:hive|        constraints: 
#:hive|          - ${DEPLOY_NODE_HIVE_METASTORE:-node.labels.ignore != true}
#:hive|
#:hive|  hive-metastore-postgresql:
#:hive|    image: ${DEPLOY_IMAGE_HIVE_METASTORE_POSTGRESQL:-bde2020/hive-metastore-postgresql:2.3.0}
#:hive|    networks:
#:hive|      - internal_network
#:hive|    volumes:
#:hive|      - hive:/var/lib/postgresql/data #!local-volume
#:hive|#:local-volume|      - ${DEPLOY_LOCAL_DATA_ROOT:?please set local volume location}/${DEPLOY_STACK_NAME:-hadoop}/hive:/var/lib/postgresql/data
#:hive|    deploy:
#:hive|      replicas: 1
#:hive|      placement:
#:hive|        constraints: 
#:hive|          - ${DEPLOY_NODE_HIVE_METASTORE:-node.labels.ignore != true}

#:presto-coordinator|  presto-coordinator:
#:presto-coordinator|    image: ${DEPLOY_IMAGE_PRESTO_COORDINATOR:-shawnzhu/prestodb:0.181}
#:presto-coordinator|#:port|    ports:
#:presto-coordinator|#:port|      - ${DEPLOY_PORT_PRESTO_COORDINATOR:-8080}:8080
#:presto-coordinator|    networks:
#:presto-coordinator|      - internal_network
#:presto-coordinator|    deploy:
#:presto-coordinator|      replicas: 1
#:presto-coordinator|      placement:
#:presto-coordinator|        constraints: 
#:presto-coordinator|          - ${DEPLOY_NODE_PRESTO_COORDINATOR:-node.labels.ignore != true}
#:presto-coordinator|      labels:
#:presto-coordinator|        - "traefik.enable=true" #!port
#:presto-coordinator|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_presto-coordinator.rule=Host(`${DEPLOY_SUBDOMAIN_NAMENODE:-presto-coordinator-hadoop}.${DEPLOY_HOSTNAME}`)"
#:presto-coordinator|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_presto-coordinator.entrypoints=webhttps"
#:presto-coordinator|#:client-ssl|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_presto-coordinator.tls.options=sslVerifyClient@file"
#:presto-coordinator|        - "traefik.http.routers.${DEPLOY_STACK_NAME:-hadoop}_presto-coordinator.tls.certresolver=le"
#:presto-coordinator|        - "traefik.http.services.${DEPLOY_STACK_NAME:-hadoop}_presto-coordinator.loadbalancer.server.port=8080"

# Reference Project: big-data-europe
# GitHub:
#   - https://github.com/big-data-europe/docker-hadoop
#   - https://github.com/big-data-europe/docker-hive
# DockerHub:
#   - https://hub.docker.com/r/bde2020/hadoop-namenode
#   - https://hub.docker.com/r/bde2020/hive
# Reference docker-compose Config:
#   - https://github.com/big-data-europe/docker-hadoop/blob/master/docker-compose-v3.yml
#   - https://github.com/big-data-europe/docker-hive/blob/master/docker-compose.yml

networks:
  internal_network:
    internal: true
    attachable: true
  external_network:
    external: true

volumes: #!local-volume
  namenode: #!local-volume
    driver_opts: #!local-volume
      type: "nfs" #!local-volume
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw" #!local-volume
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-hadoop}/namenode" #!local-volume
#:historyserver|  historyserver: #!local-volume
#:historyserver|    driver_opts: #!local-volume
#:historyserver|      type: "nfs" #!local-volume
#:historyserver|      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw" #!local-volume
#:historyserver|      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-hadoop}/historyserver" #!local-volume
#:hive|  hive: #!local-volume
#:hive|    driver_opts: #!local-volume
#:hive|      type: "nfs" #!local-volume
#:hive|      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw" #!local-volume
#:hive|      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-hadoop}/hive" #!local-volume
