version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:
  grafana:
    image: ${DEPLOY_IMAGE_GRAFANA:-grafana/grafana:latest}
#:log |    logging: *loki-logging
#:port|    ports:
#:port|      - ${DEPLOY_PORT_GRAFANA:-3000}:3000
    networks:
      - external_network
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_GRAFANA:-node.labels.ignore != true}
      labels:
        - "traefik.enable=true" #!no-proxy
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-grafana}.rule=Host(`${DEPLOY_SUBDOMAIN:-grafana}.${DEPLOY_HOSTNAME}`)"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-grafana}.entrypoints=webhttps"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-grafana}.tls.certresolver=le"
        - "traefik.http.services.${DEPLOY_STACK_NAME:-grafana}.loadbalancer.server.port=3000"

  loki:
    image: ${DEPLOY_IMAGE_LOKI:-grafana/loki:latest}
#:log |    logging: *loki-logging
#:port|    ports:
#:port|      - ${DEPLOY_PORT_LOKI:-3100}:3100
    networks:
      - external_network
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_LOKI:-node.labels.ignore != true}
      labels:
        - "traefik.enable=true" #!no-proxy
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-loki}.rule=Host(`${DEPLOY_SUBDOMAIN:-loki}.${DEPLOY_HOSTNAME}`)"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-loki}.entrypoints=webhttps"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-loki}.tls.certresolver=le"
        - "traefik.http.services.${DEPLOY_STACK_NAME:-loki}.loadbalancer.server.port=3100"

  # Reference: https://github.com/mlabouardy/swarm-tig
  influxdb:
    image: ${DEPLOY_IMAGE_INFLUXDB:-influxdb:latest}
#:log |    logging: *loki-logging
    networks:
      - external_network
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_INFLUXDB:-node.labels.ignore != true}

  telegraf:
    image: ${DEPLOY_IMAGE_TELEGRF:-telegraf:latest}
#:log |    logging: *loki-logging
    hostname: "{{.Node.Hostname}}"
    networks:
      - external_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: telegraf-config
        target: /etc/telegraf/telegraf.conf
    deploy:
      mode: global

networks:
  external_network:
    external: true

configs:
  telegraf-config:
    file: ./config/telegraf.conf

volumes:
  grafana:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-plg}/grafana"
