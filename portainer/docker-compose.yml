version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:
  agent:
    image: ${DEPLOY_IMAGE_AGENT:-portainer/agent}
#:log |    logging: *loki-logging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: ${DEPLOY_IMAGE_PORTAINER:-portainer/portainer}
#:log |    logging: *loki-logging
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "8000:8000"
#:port|      - ${DEPLOY_PORT_PORTAINER:-9000}:9000
    volumes:
      - data:/data
    networks:
      - external_network
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true" #!port
        - "traefik.http.routers.portainer_web.rule=Host(`swarm.${DEPLOY_HOSTNAME}`)"
        - "traefik.http.routers.portainer_web.entrypoints=webhttps"
        - "traefik.http.routers.portainer_web.tls.certresolver=le"
        - "traefik.http.services.portainer_web.loadbalancer.server.port=9000"

networks:
  external_network:
    external: true
  agent_network:
    driver: overlay
    attachable: true

volumes:
  data:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_NFS_HOST,nolock,soft,rw"
      device: ":$DEPLOY_NFS_ROOT${DEPLOY_DATA_ROOT:-/portainer/var}/data"
