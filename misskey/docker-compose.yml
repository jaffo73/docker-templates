version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:
  web:
    image: ${DEPLOY_IMAGE_WEB:-misskey/misskey:12.47.0}
#:log |    logging: *loki-logging
#:port|    ports:
#:port|      - ${DEPLOY_PORT_WEB:-3000}:3000
    networks:
      - internal_network
      - external_network
    volumes:
      - files:/misskey/files
    configs:
      - source: misskey-config
        target: /misskey/.config/default.yml
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_WEB:-node.labels.ignore != true}
      labels:
        - "traefik.enable=true" #!port
        - "traefik.http.routers.misskey_web.rule=Host(`${DEPLOY_SUBDOMAIN:-misskey}.${DEPLOY_HOSTNAME}`)"
        - "traefik.http.routers.misskey_web.entrypoints=webhttps"
        - "traefik.http.routers.misskey_web.tls.certresolver=le"
        - "traefik.http.services.misskey_web.loadbalancer.server.port=3000"

  redis:
    image: ${DEPLOY_IMAGE_REDIS:-redis:4.0-alpine}
#:log |    logging: *loki-logging
    networks:
      - internal_network
    volumes:
      - redis:/data
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_REDIS:-node.labels.ignore != true}

  db:
    image: ${DEPLOY_IMAGE_DB:-postgres:12.2-alpine}
#:log |    logging: *loki-logging
    networks:
      - internal_network
    env_file:
      - config/docker.env
    volumes:
      - db:/var/lib/postgresql/data
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_DB:-node.labels.ignore != true}

#  es:
#    image: ${DEPLOY_IMAGE_ES:-docker.elastic.co/elasticsearch/elasticsearch-oss:6.4.2}
##:log |    logging: *loki-logging
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    networks:
#      - internal_network
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data

networks:
  internal_network:
    internal: true
  external_network:
    external: true

configs:
  misskey-config:
    file: ./config/default.yml

volumes:
  config:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_NFS_HOST,nolock,soft,rw"
      device: ":$DEPLOY_NFS_ROOT${DEPLOY_DATA_ROOT:-/misskey/var}/config"
  files:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_NFS_HOST,nolock,soft,rw"
      device: ":$DEPLOY_NFS_ROOT${DEPLOY_DATA_ROOT:-/misskey/var}/files"
  redis:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_NFS_HOST,nolock,soft,rw"
      device: ":$DEPLOY_NFS_ROOT${DEPLOY_DATA_ROOT:-/misskey/var}/redis"
  db:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_NFS_HOST,nolock,soft,rw"
      device: ":$DEPLOY_NFS_ROOT${DEPLOY_DATA_ROOT:-/misskey/var}/db"
