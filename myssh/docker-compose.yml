version: "3.8"

x-logging: &loki-logging
    driver: loki
    options:
      loki-url: "${DEPLOY_LOKI_URL}"
      loki-retries: 5
      loki-batch-size: 400

services:
  web:
    image: ${DEPLOY_IMAGE_WEB:-myssh-web:latest}
#:log |    logging: *loki-logging
#:port|    ports:
#:port|      - ${DEPLOY_PORT_WEB:-80}:80
    networks:
      - internal_network
      - external_network
    depends_on:
      - db
    volumes:
      - www:/var/www
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_WEB:-node.labels.ignore != true}
      labels:
        - "traefik.enable=true" #!port
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-myssh}.rule=Host(`${DEPLOY_SUBDOMAIN:-attack}.${DEPLOY_HOSTNAME}`)"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-myssh}.entrypoints=webhttps"
        - "traefik.http.routers.${DEPLOY_STACK_NAME:-myssh}.tls.certresolver=le"
        - "traefik.http.services.${DEPLOY_STACK_NAME:-myssh}.loadbalancer.server.port=80"

  honeypot:
    image: ${DEPLOY_IMAGE_HONEYPOT:-myssh-honeypot:latest}
#:log |    logging: *loki-logging
    env_file: ./config/docker.env
    environment:
      - IPSTACK_ACCESS_KEY
    networks:
      - internal_network
      - external_network
    ports:
      - target: 22
        published: 22
        protocol: tcp
        mode: host
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  db:
    image: ${DEPLOY_IMAGE_DB:-mysql/mysql-server:5.7.31}
#:log |    logging: *loki-logging
    env_file: ./config/docker.env
    networks:
      - internal_network
    volumes:
      - db:/var/lib/mysql
    configs:
      - source: initdb-config
        target: /docker-entrypoint-initdb.d/mysql.sql
    deploy:
      replicas: 1
      placement:
        constraints: 
          - ${DEPLOY_NODE_DB:-node.labels.ignore != true}

networks:
  internal_network:
    internal: true
  external_network:
    external: true

configs:
  initdb-config:
    file: ./config/mysql.sql

volumes:
volumes:
  www:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-myssh}/www"
  db:
    driver_opts:
      type: "nfs"
      o: "addr=$DEPLOY_DATA_HOST,nolock,soft,rw"
      device: ":$DEPLOY_DATA_ROOT/${DEPLOY_STACK_NAME:-myssh}/db"
